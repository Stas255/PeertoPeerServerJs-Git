<div class="text-center">
  <h2>Rooms</h2>
</div>

<div class="row mb-3">
  <div class="text-center">
    <button type="button" id="room_" class="btn btn-primary" data-bs-toggle="modal"
      data-bs-target="#createRoomModal">Create New Room</button>
  </div>
</div>

<div class="row" id="divRooms">

</div>
<!--
<div class="row">
  {{#each rooms}}
  <div class="col-md-4 mb-3">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">{{name}}</h5>
        <a href="/rooms/{{name}}" class="btn btn-primary" id="room_{{name}}">View Room</a>
      </div>
    </div>
  </div>
  {{/each}}
</div>
-->

<!-- Create Room Modal -->
<div class="modal fade" id="createRoomModal" tabindex="-1" aria-labelledby="createRoomModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form>
        <div class="modal-header">
          <h5 class="modal-title" id="createRoomModalLabel">Create New Room</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="name" class="form-label">Room Name</label>
            <input type="text" class="form-control" id="RoomName" name="name" required>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" onclick="createNewRoom()" class="btn btn-primary">Create Room</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script src="/js/main.js"></script>
<script src="/js/socket.js"></script>

<script>
  const userNameDiv = document.getElementById('userNameDiv');
  userNameDiv.innerHTML = '<input type="text" class="form-control" id="userName" placeholder="Enter your name">' +
    '<span id="nameError" class="text-info">Please enter your name</span>';
  const nameError = document.getElementById('nameError');
  const userNameInput = document.getElementById('userName');
  var socket = null
  async function startConncting() {
    socket = await connectToServer(nameError, userNameInput);
    socket.emit("getListRooms");

    socket.on("emitGetListRooms", data => {
      document.getElementById('divRooms').innerHTML = '';
      for (let i = 0; i < data.length; i++) {
        document.getElementById('divRooms').innerHTML += '<div class="col-md-4 mb-3">' +
        '<div class="card">' +
        '<div class="card-body">' +
        '<h5 class="card-title">' + data[i] + '</h5>' +
        '<a href="/rooms/' + data[i] + '" class="btn btn-primary">View Room</a>' +
        '</div>' +
        '</div>' +
        '</div>';
      }
      console.log(data);
    });

    userNameInput.addEventListener('blur', () => {
      const newUserName = userNameInput.value;
      const oldUserName = sessionStorage.getItem('userName');
      if (newUserName != oldUserName && newUserName != '') {
        nameError.classList = "text-info"
        nameError.innerHTML = 'Зміна імені'
        socket.emit("changeName", newUserName);
      }
    });
  }

  function createNewRoom() {
    const newRoomName = document.getElementById('RoomName').value;
    socket.emit("createNewRoom", newRoomName);
    socket.on("emitCreateNewRoom", data => {
      if (!data.error) {
        location.reload();
      } else {
        nameError.style.display = 'block'
        nameError.classList = "text-danger"
        nameError.innerHTML = data.message
      }
      console.log(data);
    });
  }

  startConncting();
</script>